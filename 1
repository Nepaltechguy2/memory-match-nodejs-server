^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600   1) // a mem match game for english class yay
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600   2) // made by samyok nepal. (c) 2018.
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600   3) // no part of this may be reproduced unless one or both of the following apply:
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600   4) // either
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600   5) //  the portion that is to be reproduced is from another source
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600   6) //  or with written permission from the author.
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600   7) const APP_NAME = "English Memory Match";
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600   8) const startTime = Date();
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600   9) const logger = require('./custom_modules/logger.js');
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  10) var samyok = require('./custom_modules/samyok.js')({
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  11)     "logger": logger
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  12) });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  13) 
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  14) const fs = require("fs");
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  15) const blah = JSON.parse(fs.readFileSync('./custom_modules/questions.json', 'utf8'));
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  16) 
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  17) var socket = require("socket.io");
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  18) var express = require("express");
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  19) var app = express(); // server STUFF
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  20) var restart_code = randInt(10000, 9999999);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  21) app.get('/restart_code=' + restart_code, function(req, res, next) { // restart function
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  22)     logger.error("/restart HIT! RESTART NOOoOooOOOOO");
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  23)     res.send('<h1>Server Restart</h1><script>setTimeout(function(){location.href="/"}, 1000)</script>');
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  24)     process.exit(1);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  25) });
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  26) 
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  27) logger.silly("Imports done.");
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  28) 
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  29) var server = app.listen(4000, function() {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  30)     logger.info("Started " + APP_NAME + "'s express server. Listening to port 4000.");
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  31) });
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  32) app.use(express.static("public"));
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  33) var io = socket(server);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  34) logger.info("Started " + APP_NAME + "'s socket server.");
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  35) 
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  36) var place = function() {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  37)     this.clean = function(a) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  38)         for (var i = 0; i < this.length; i++) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  39)             if (this[i] == a) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  40)                 this.splice(i, 1);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  41)                 i--
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  42)             }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  43)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  44)         return this;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  45)     };
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  46) }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  47) // define vars and add .clean() functions.
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  48) var users = new place();
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  49) var rooms = new place();
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  50) var lobbies = new place();
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  51) 
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  52) io.on("connection", (socket) => {
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  53)     var key = socket.id;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  54)     users[key] = {};
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  55)     logger.info("+1 user! Key: " + key + " Total: " + samyok.count(users));
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  56)     users[key].logged_in = false;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  57)     logger.silly(users);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  58)     io.to(key).emit("connected", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  59)         connected: true
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  60)     }); // make sure that they are
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  61)     // connected and trigger login.
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  62)     socket.on("username", function(data) {
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  63)         // check if username exists:
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  64)         var allow = true;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  65)         for (var a in users) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  66)             if (users[a].username == data.username) {
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  67)                 allow = false;
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  68)             }
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  69)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  70)         if (allow) {
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  71)             users[key].logged_in = true;
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  72)             users[key].username = data.username;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  73)             logger.silly(users);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  74)             logger.info("Login: " + users[key].username);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  75)             io.to(key).emit("username_response", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  76)                 message: "success",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  77)                 lobby: "main",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  78)                 username: users[key].username
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  79)             });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  80)             logger.info("Move " + users[key].username + " to lobby 'main'.");
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  81)             if (lobbies.main != undefined) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  82)                 lobbies.main[key] = users[key].username;
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  83)             } else {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  84)                 var main = new place();
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  85)                 lobbies.main = main;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  86)                 lobbies.main[key] = users[key].username;
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  87)             }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  88)             logger.silly(lobbies);
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600  89)         } else {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  90)             io.to(key).emit("username_response", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  91)                 message: 'error',
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  92)                 reason: "Your username is taken. Please pick another one."
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  93)             })
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  94)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  95)     });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  96)     socket.on("create_room", function(data) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  97)         switch (data.type) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  98)             case "double":
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500  99)                 io.to(key).emit('room_created', {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 100)                     room: create_room("double", key)
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 101)                 })
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 102)                 break;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 103)             default:
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 104)                 io.to(key).emit("error", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 105)                     message: "lol"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 106)                 });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 107)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 108)     });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 109)     socket.on('samyok_says_restart', function(data) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 110)         logger.warn("Restart code Requested by " + key);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 111)         socket.emit("console", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 112)             href: "/restart_code=" + restart_code
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 113)         });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 114)     })
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 115)     socket.on("join_room", function(data) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 116)         join_room(data.code, key);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 117)     });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 118)     socket.on("ready", function() {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 119)         for (var a in rooms) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 120)             if (rooms[a].gameInfo == null || rooms[a].gameInfo.leader == key) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 121)                 var other = "player2";
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 122)             } else {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 123)                 var other = "leader";
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 124)             }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 125)             if (rooms[a].gameInfo == undefined) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 126)                 delete rooms[a];
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 127)                 logger.error("Deleted room " + a + ", the room's info was undefined.");
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 128)                 logger.silly(rooms);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 129)             } else if (rooms[a].gameInfo.leader == key) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 130)                 rooms[a].ready.leader = true;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 131)                 logger.info("Marked " + users[key].username + " as ready to play in room " + a + '.');
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 132)                 logger.silly(rooms);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 133)                 start_game(a);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 134)             } else if (rooms[a].gameInfo.player2 == key) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 135)                 rooms[a].ready.player2 = true;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 136)                 logger.info("Marked " + users[key].username + " as ready to play in room " + a + '.');
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 137)                 logger.silly(rooms);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 138)                 start_game(a);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 139)             }
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600 140)         }
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600 141)     });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 142)     Array.prototype.clean = function(d) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 143)         for (var i = 0; i < this.length; i++) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 144)             if (this[i] == d) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 145)                 this.splice(i, 1);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 146)                 i--;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 147)             }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 148)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 149)         return this;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 150)     };
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 151) 
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 152)     function start_game(room) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 153)         logger.warn(blah);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 154)         if (!rooms[room].ready.leader || !rooms[room].ready.player2) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 155)             return false;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 156)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 157)         logger.info("Started game in room " + room + ".");
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 158)         rooms[room].started = 1;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 159)         io.to(rooms[room].gameInfo.leader).emit("game_start", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 160)             first: true
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 161)         });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 162)         io.to(rooms[room].gameInfo.player2).emit("game_start", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 163)             first: false
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 164)         });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 165)         var arr = [{
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 166)                 "question": "Main character",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 167)                 "answer": "Guy Montag"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 168)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 169)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 170)                 "question": "Montag's wife",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 171)                 "answer": "Mildred"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 172)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 173)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 174)                 "question": "Last Person killed by Montag",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 175)                 "answer": "Captain Beatty"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 176)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 177)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 178)                 "question": "A machine that tries to kill Montag",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 179)                 "answer": "The Hound"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 180)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 181)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 182)                 "question": "The book Montag memorized",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 183)                 "answer": "Book of Ecclesiastes"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 184)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 185)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 186)                 "question": "Poem that Montag reads",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 187)                 "answer": "Dover Beach"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 188)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 189)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 190)                 "question": "Temperature at which paper burns",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 191)                 "answer": "451 degrees Farenheit"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 192)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 193)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 194)                 "question": "Most important girl in the story",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 195)                 "answer": "Clarisse McClellan"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 196)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 197)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 198)                 "question": "Author of Fahrenheit 451 ",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 199)                 "answer": "Ray Bradbury"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 200)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 201)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 202)                 "question": "Number of walls in Mildred's \"family\"",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 203)                 "answer": "3"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 204)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 205)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 206)                 "question": "Clarisse makes Montag question this feeling",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 207)                 "answer": "Happiness"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 208)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 209)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 210)                 "question": "Mildred ___, so techies were called. ",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 211)                 "answer": "Ate too many sleeping pills"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 212)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 213)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 214)                 "question": "Leader of so-called \"criminals\" ",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 215)                 "answer": "Granger"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 216)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 217)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 218)                 "question": "Montag original thoughts on burning",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 219)                 "answer": "Pleasing"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 220)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 221)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 222)                 "question": "Montag convinced Faber to help him by...",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 223)                 "answer": "Ripping pages out of the Bible"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 224)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 225)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 226)                 "question": "The Hound's weapon",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 227)                 "answer": "A procaine needle"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 228)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 229)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 230)                 "question": "Name of fireman that Montag reported",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 231)                 "answer": "Black"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 232)             },
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 233)             {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 234)                 "question": "A(n) ___ man is killed instead of Montag",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 235)                 "answer": "Innocent"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 236)             }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 237)         ];
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 238)         console.log(arr);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 239)         var NUMBER_OF_CARDS = arr.length * 2; //MUST BE EVEN
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 240)         var new_arr = rearrange();
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 241) 
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 242)         function rearrange() {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 243)             var newArr = [];
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 244)             for (var i = 0; i < NUMBER_OF_CARDS / 2; i++) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 245)                 item = Math.floor(Math.random() * arr.length)
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 246)                 newArr.push(arr[item].question);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 247)                 newArr.push(arr[item].answer);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 248)                 delete arr[item];
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 249)                 arr.clean(null);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 250)             }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 251)             return newArr;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 252)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 253)         super_arr = shuffle(new_arr);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 254) 
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 255)         function shuffle(arr) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 256)             var TheArr = arr;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 257)             var return_arr = [];
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 258)             var iterations = TheArr.length;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 259)             for (var i = 0; i < iterations; i++) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 260)                 var theNumber = Math.floor(Math.random() * (TheArr.length));
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 261)                 return_arr.push(TheArr[theNumber]);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 262)                 delete TheArr[theNumber];
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 263)                 TheArr.clean();
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 264)             }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 265)             return return_arr;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 266)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 267)         rooms[room].game.turn = "leader";
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 268)         rooms[room].game.card1 = null;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 269)         rooms[room].game.card2 = null;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 270)         rooms[room].cards = super_arr;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 271)         logger.silly(rooms);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 272)     }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 273)     socket.on("click_card", function(data){;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 274)         var room = findRoomName(key);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 275)         logger.silly('card click in room '+room);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 276)         if(key == rooms[room].gameInfo[rooms[room].game.turn]){
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 277)             if(rooms[room].game.card1 ==null){
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 278)                 rooms[room].game.card1 = rooms[room].cards[data.number];
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 279)                 io.to(rooms[room].gameInfo.leader).to(rooms[room].gameInfo.player2).emit("flip_card", {number : data.number, text :rooms[room].game.card1});
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 280)             } else if(rooms[room].game.card2 == null){
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 281)                 rooms[room].game.card2 =rooms[room].cards[data.number];
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 282)                 io.to(rooms[room].gameInfo.leader).to(rooms[room].gameInfo.player2).emit("flip_card", {number : data.number, text: rooms[room].game.card2});
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 283)             } else {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 284)                 rooms[room].game.card2 = null;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 285)                 rooms[room].game.card1 = null;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 286)                 io.to(rooms[room].gameInfo.leader).emit("flip_card", {number :data.number, text: ""});
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 287)                 io.to(rooms[room].gameInfo.player2).emit("flip_card", {number :data.number, text: ""});
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 288)             }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 289)         } else {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 290)             io.to(key).emit("message", {color: "red", message: "Not your turn!"});
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 291)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 292)         logger.silly(rooms);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 293)     });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 294)     function findRoomName(key){
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 295)         for(var a in rooms){
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 296)             if(rooms[a].gameInfo.leader == key || rooms[a].gameInfo.player2 == key){
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 297)                 return a;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 298)             }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 299)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 300)     }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 301)     socket.on("disconnect", function() {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 302)         for (var a in rooms) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 303)             if (rooms[a].gameInfo == null || rooms[a].gameInfo.leader == key) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 304)                 var other = "player2";
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 305)             } else {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 306)                 var other = "leader";
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 307)             }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 308)             if (rooms[a].hasOwnProperty() && (rooms[a].gameInfo.leader == null && rooms[a].gameInfo.player2==null)) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 309)                 delete rooms[a];
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 310)                 logger.error("Deleted room " + a + ", the room's info was undefined or no other player was in it. ");
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 311)                 logger.silly(rooms);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 312)             } else if (rooms[a].hasOwnProperty() && rooms[a].gameInfo.leader == key) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 313)                 rooms[a].gameInfo.leader = null;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 314)                 rooms[a].abandoned = true;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 315)                 logger.info(users[key].username + " just left room " + a + ", marked as abandoned.");
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 316)                 io.to(rooms[a].gameInfo.player2).emit("gameInfo", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 317)                     type: "notif",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 318)                     message: "opponent_abandoned"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 319)                 });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 320)                 logger.info("Sent abandoned, win notification to " + users[rooms[a].gameInfo.player2].username)
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 321)                 logger.silly(rooms);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 322)             } else if ( rooms[a].hasOwnProperty() && rooms[a].gameInfo.player2 == key) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 323)                 rooms[a].gameInfo.player2 = null;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 324)                 rooms[a].abandoned = true;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 325)                 logger.info(users[key].username + " just left room " + a + ", marked as abandoned.");
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 326)                 io.to(rooms[a].gameInfo.leader).emit("gameInfo", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 327)                     type: "notif",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 328)                     message: "opponent_abandoned"
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 329)                 });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 330)                 logger.info("Sent abandoned, win notification to " + users[rooms[a].gameInfo.leader].username)
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 331)                 logger.silly(rooms);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 332)             }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 333)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 334)         logger.info("-1 user. Key: " + key + " Total: " + samyok.count(users));
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 335)         for (var a in lobbies) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 336)             delete lobbies[a][key];
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 337)             logger.info("Removed user " + users[key].username + " from lobby " + a);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 338)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 339)         logger.info("Deleting " + users[key].username);
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600 340)         delete users[key];
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600 341)         users.clean(null); // look for null and get rid of it.
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600 342)     });
^39ce28b (Nepaltechguy2     2018-03-07 07:00:43 -0600 343) });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 344) var roomNumber = 0;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 345) 
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 346) function randInt(min, max) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 347)     return Math.floor(min + Math.random() * (max + 1 - min))
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 348) }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 349) 
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 350) function create_room(type, key) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 351)     for (var a in lobbies) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 352)         delete lobbies[a][key];
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 353)     } // remove from lobby
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 354)     roomNumber += randInt(9, 20);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 355)     var room_name = "room" + roomNumber.toString();
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 356)     rooms[room_name] = new place();
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 357)     rooms[room_name].type = type;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 358)     rooms[room_name].gameInfo = {};
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 359)     rooms[room_name].game = {};
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 360)     rooms["room" + roomNumber.toString()].gameInfo.leader = key;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 361)     rooms[room_name].ready = {};
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 362)     rooms[room_name].ready.leader = false;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 363)     if (type == "double") {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 364)         rooms[room_name].gameInfo.player2 = null;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 365)         rooms[room_name].ready.player2 = false;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 366)     }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 367)     rooms[room_name].started = false;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 368)     rooms[room_name].abandoned = false;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 369)     logger.silly(rooms);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 370)     return room_name;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 371) }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 372) 
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 373) function join_room(code, key) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 374)     if (rooms[code] == null || rooms[code].abandoned) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 375)         io.to(key).emit("join_response", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 376)             message: "error",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 377)             reason: "Not a real room."
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 378)         });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 379)         logger.info(key + " just tried to go to room " + code);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 380)         logger.silly(rooms);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 381)         return true;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 382)     } else {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 383)         rooms[code].gameInfo.player2 = key;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 384)         io.to(rooms[code].gameInfo.leader).emit("player_joined", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 385)             player: users[key].username
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 386)         });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 387)         logger.silly(rooms);
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 388)         io.to(key).emit("join_response", {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 389)             message: "success",
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 390)             code: code,
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 391)             player: users[rooms[code].gameInfo.leader].username
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 392)         });
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 393)     }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 394) }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 395) 
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 396) function findCP(cardText) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 397)     for (var number in blah) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 398)         if (blah[number].question == cardText) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 399)             return blah[number].answer;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 400)         } else if (blah[number].answer == cardText) {
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 401)             return blah[number].question;
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 402)         }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 403)     }
00000000 (Not Committed Yet 2018-03-11 20:25:31 -0500 404) }
